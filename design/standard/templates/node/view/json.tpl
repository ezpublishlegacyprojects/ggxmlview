{*
 * @version $Id: $
 * @author Gaetano Giunta
 * @copyright (c) 2008 G. Giunta
 * @license code licensed under the GPL License: see README
 *
 * DO NOT EDIT THIS FILE! Use an override template instead.
 *}
{ldelim}

  "node_id":"{$node.node_id}",
  "parent_node_id":"{$node.parent_node_id}",
  "depth:":"{$node.depth}",
  "object":{ldelim}

    "id":"{$node.contentobject_id}",
    "name":"{$node.object.name|wash('javascript')}",
    "class_name":"{$node.object.class_name|wash('javascript')}",
    "current_version":"{$node.object.current_version}",
    "main_node_id":"{$node.object.main_node_id}",
    "data_map":{ldelim}
{foreach $node.object.data_map as $name => $item}

      "{$name}":{attribute_view_gui view = json attribute = $item}{delimiter},{/delimiter}
{/foreach}

    {rdelim}

  {rdelim}

  "children":[
{* @todo verify if using $node.children has same sort order, creates same compiled code *}
{let children = fetch( 'content', 'list', hash( parent_node_id, $node.node_id, sort_by, $node.sort_array ) )}
{foreach $children as $item}
{* NB: full recursive view of all child nodes *}
{node_view_gui view = json content_node = $item}{delimiter},{/delimiter}
{/foreach}
  ]

{rdelim}
